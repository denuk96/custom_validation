exit
self.send(args[:method])
self.send args[:method].to_s
self.send args[:method]
send args[:method]
args[:method]
args
self.send args[:method]
self.send args[:presence]
self.send args[:presence] 
send
self
args
exit
ValidationMethods.private_instance_methodse
ValidationMethods.private_instance_methods
ValidationMethods.instance_methods
ValidationMethods.methods
ValidationMethods.private_methods
ValidationMethods.methods
exit
''.empty?
value.nil?
value = args[:value
args
agrs
exit
args
exit
ValidationMethods.singleton_method
ValidationMethods.singleton_methods
ValidationMethods.methods
ValidationMethods.methods.include? validator_name
validator_name
exit
valid_condition
exit
validator
condition
exit
ValidationMethods.methods.include?(name)
ValidationMethods.method_defined
ValidationMethods.method_defined? name
ValidationMethods.
ValidationMethods
exit
name
exit
ValidationMethods.public_instance_methods]
ValidationMethods.public_instance_methods
exit
ValidationMethods.public_instance_methods
ValidationMethods.methods
exit
self.instance_variable_defined? "@#{field}"
self.instance_variable_defined? "@#{field}
self.instance_variable_defined?
self.instance_variable_defined? field
self.instance_variables
self.instance_variables,
self.methods
validator.keys[0] 
validator[0]
validator.key
validator
exit
condition
self.send 'bla'
!! self.send field
!self.send field
!!self.send field
valid_instance? field
field
exit
args[:email]
args[:email[
args
*args
exit
args.extract_options!
args
exit
args
exit
options = args.extract_options!
args
*args
args
exit
args[:email]
args
exit
args.fetch(:email)
args
exit
args[0]
args
